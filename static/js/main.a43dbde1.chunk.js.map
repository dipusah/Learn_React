{"version":3,"sources":["Components/Alert.js","Components/About.js","Components/Navbar.js","Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capatalized","msg","About","useState","color","backgroundColor","mystyle","setMyStyle","btntext","setBtnText","style","id","onClick","border","Navbar","mode","to","title","aboutText","toggleMode","htmlFor","TextForm","text","setText","heading","value","onChange","event","target","rows","newText","showAlert","tolower","split","length","defaultProps","history","createBrowserHistory","App","setMode","setAlert","message","setTimeout","document","body","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a43dbde1.chunk.js","sourcesContent":["import React from \"react\";\r\n// alert use\r\nexport default function Alert(props) {\r\n    const capatalized=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    \r\n      }\r\n    \r\n  return (\r\n       props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capatalized(props.alert.type)}</strong>: {props.alert.msg}\r\n   \r\n      </div>\r\n  );\r\n}\r\n","import React,{useState} from \"react\";\r\n\r\nexport default function About() {\r\n    const [mystyle,setMyStyle]=useState({\r\n        color:\"black\",\r\n        backgroundColor:\"white\"\r\n    })\r\n    const [btntext,setBtnText]=useState(\"Enable Dark mode\")\r\n\r\n    const toggleStyle =()=>{\r\n        if(mystyle.color===\"black\"){\r\n            setMyStyle({color:\"white\",\r\n            backgroundColor:'black',\r\n            border:\"1px solid white\"\r\n        })\r\n        setBtnText(\"Enable Light mode\")\r\n    }\r\n        else{\r\n            setMyStyle({\r\n                color:\"black\",\r\n                backgroundColor:\"white\"\r\n            })\r\n            setBtnText(\"Enable Dark mode\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container my-3\" style={mystyle}>\r\n        <h2 className=\"my-3\">About Us</h2>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              style={mystyle}\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n            >\r\n              This app is all about play with Text.\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n            \r\n          >\r\n            <div className=\"accordion-body\" style={mystyle}>\r\n              <strong>\r\n                <li>we capitalize latter.</li>\r\n                \r\n                <li>we change text in to lower text.</li>\r\n                <li>we clear text.</li>\r\n                <li>count character and number of words in text.</li>\r\n              </strong>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container my-3\">\r\n        <button onClick={toggleStyle} type=\"button\" className=\"btn btn-primary\">{btntext}</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            {props.title}\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">\r\n                  {props.aboutText}\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n//Specifies the default values for props:\r\nNavbar.defaultProps = {\r\n  title: 'set title here',\r\n  aboutText :\"About text title\"\r\n};\r\n\r\nNavbar.propTypes={\r\n  title:PropTypes.string.isRequired,\r\n  aboutText:PropTypes.string.isRequired\r\n};\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n       // console.log(\"uppercase was clicked ==>\" + text);\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Upper case\",\"success\");\r\n\r\n    }\r\n    const handleLoClick =()=>{\r\n        let tolower=text.toLowerCase();\r\n        setText(tolower);\r\n        props.showAlert(\"Converted to Lower case\",\"success\");\r\n    }\r\n    const handleClearText =()=>{\r\n      let clear=\"\";\r\n      setText(clear);\r\n      props.showAlert(\"Clear Text\",\"success\");\r\n  }\r\n    const handleOnchange = (event)=>{\r\n        //console.log(\"Onchanged\");\r\n        setText(event.target.value);\r\n        \r\n\r\n    }\r\n\r\n  // Declare a new state variable, which we'll call \"count\"\r\n  const [text, setText] = useState(\"\");\r\n  //text =\"new text\"; //wrong way to change state\r\n  // setText(\"new text\");//correct way to change the state.\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-3\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n        <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">\r\n          <h1>{props.heading}</h1>\r\n        </label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          value={text}\r\n          onChange={handleOnchange}\r\n          style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'#042743'}}\r\n          id=\"exampleFormControlTextarea1\"\r\n          rows=\"8\"\r\n        ></textarea>\r\n      </div>\r\n\r\n      <button className=\"btn btn-primary mx-1\"  onClick={handleUpClick} >\r\n        Convert to Upper case\r\n      </button>\r\n\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>\r\n        Convert to lower case\r\n      </button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleClearText}>\r\n        ClearText\r\n      </button>\r\n\r\n\r\n      <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n          <h1>your text Summary</h1>\r\n          <p>{text.charAt(0)===\"\"?0:text.split(\" \").length} words and {text.length} character</p>\r\n          <p>{text.charAt(0)===\"\"?0:0.008 *text.split(\" \").length} Minutes to read</p>\r\n          <h2>Preview</h2>\r\n          <p>{text.length>0?text:\"Enter something in the textbox to preview it here\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useState } from \"react/cjs/react.development\";\nimport \"./App.css\";\nimport Alert from \"./Components/Alert\";\nimport About from \"./Components/About\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); //whether dark mode is enabled or disabled\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      //blink  this title comment section\n      document.title = \"TexUtils - Dark Mode\";\n      // setInterval(()=>{\n      //   document.title='TexUtils - Amazing Mode'\n      // },2000)\n      // setInterval(()=>{\n      //   document.title=\"install textutil now\"\n      // },1500)\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = \"TexUtils - Light Mode\";\n    }\n  };\n\n  return (\n    <>\n      <Router history={history}>\n        <Navbar\n          title=\"First app TextUtil\"\n          aboutText=\"About\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Routes>\n            {/* /user ---->component 1}\n                /user/home -->component 2 if not use exact */}\n            <Route exact path=\"/about\" element={<About />} />\n            <Route exact\n              path=\"/\"\n              element={\n                <TextForm\n                  showAlert={showAlert}\n                  heading=\"Enter the text to analyze below!\"\n                  mode={mode}\n                />\n              }\n            />\n          </Routes>\n        </div>\n      </Router>\n      node\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}